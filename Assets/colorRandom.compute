// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

//tipo de dado definido pelo usuario
struct Cube{
    float3 position;
    float4 color;
}

//armazena varias instancias da estrutura anterior
RWStructuredBuffer<Cube> cubes; //armazena qualquer tipo de dado em GPU
int iteraction;

float rand(float2 co){
    return(frac(sin(dot(co.xy, float(12.9898, 78.233)))*4378.5453))*1;
}

[numthreads(10,1,1)] //bloco linear que varia somente no x
void CSMain (uint3 id : SV_DispatchThreadID)
{   
    Cube cube = cubes[id.x];//indexou

    //calculo de cores aleatorias
    for(int i=0; i< iteraction; i++){
        //calculo do RGB
        float _r =rand(float2(cube.color.r, cube.color.g));
        float _g =rand(float2(cube.color.g, cube.color.b));
        float _b = rand(float2(cube.color.r,cube.color.b));

        cube.color = float4(_r, _g, _b, 1);
    }

    cubes[id.x] = cube;
   
}
